@page "/"
@using InsideAirbnb.Services
@using InsideAirbnb.Components
@using InsideAirbnb.Delegates
@using InsideAirbnb.Models

<PageTitle>Index</PageTitle>
<div class="h-100 vw-100 d-flex">
    <div class="flex-grow-1">
        @if (string.IsNullOrEmpty(Geojson))
        {
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }
        else
        {
            <Mapbox Class="h-100" GeoJson="@Geojson" OnSelect="new SelectListingDelegate(SelectListing)"/>
        }
    </div>
    <div class="w-25 d-flex flex-column overflow-auto">
        @if (SelectedListing == null)
        {
            <p>Click on a listing on the map to view details.</p>
        }
        else
        {
            <div>
                <img class="img-fluid" alt="photo of the listing" src="@SelectedListing.PictureUrl">
            </div>
            <div class="px-3">
                <h3>@SelectedListing.Name</h3>

                <p>
                    <span class="oi oi-map-marker"></span> @SelectedListing.NeighbourhoodCleansed
                </p>
                @if (@SelectedListing.ReviewScoresRating != null)
                {
                    <p>
                        <span class="oi oi-star"></span> @SelectedListing.ReviewScoresRating / 5
                    </p>
                }
                <p><span class="oi oi-euro"></span> @SelectedListing.Price / night</p>

                <p>@((MarkupString)SelectedListing.Description)</p>
            </div>
        }
    </div>
</div>


<AuthorizeView>
    <Authorized>
    </Authorized>
</AuthorizeView>

@code
{
    [Inject]
    protected IListingsService ListingsService { get; set; } = null!;

    private Listing? SelectedListing { get; set; }
    private string? Geojson { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Geojson = await ListingsService.GetLocationsAsGeoJson();
    }

    private async Task SelectListing(int listingId)
    {
        Console.WriteLine("got it 2!");
        SelectedListing = await ListingsService.GetListingById(listingId);
        StateHasChanged();
    }
}