// <auto-generated />
using System;
using InsideAirbnb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsideAirbnb.Migrations
{
    [DbContext(typeof(Airbnb2022Context))]
    partial class Airbnb2022ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InsideAirbnb.Models.Listing", b =>
                {
                    b.Property<int>("Availability365")
                        .HasColumnType("int")
                        .HasColumnName("availability_365");

                    b.Property<int>("CalculatedHostListingsCount")
                        .HasColumnType("int")
                        .HasColumnName("calculated_host_listings_count");

                    b.Property<int>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("host_id");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("host_name");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("LastReview")
                        .HasColumnType("date")
                        .HasColumnName("last_review");

                    b.Property<double>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<string>("License")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("license");

                    b.Property<double>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<int>("MinimumNights")
                        .HasColumnType("int")
                        .HasColumnName("minimum_nights");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Neighbourhood")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("neighbourhood");

                    b.Property<string>("NeighbourhoodGroup")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("neighbourhood_group");

                    b.Property<int>("NumberOfReviews")
                        .HasColumnType("int")
                        .HasColumnName("number_of_reviews");

                    b.Property<int>("NumberOfReviewsLtm")
                        .HasColumnType("int")
                        .HasColumnName("number_of_reviews_ltm");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<double?>("ReviewsPerMonth")
                        .HasColumnType("float")
                        .HasColumnName("reviews_per_month");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("room_type");

                    b.ToTable("listings", (string)null);
                });

            modelBuilder.Entity("InsideAirbnb.Models.Neighbourhood", b =>
                {
                    b.Property<string>("Neighbourhood1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("neighbourhood");

                    b.Property<string>("NeighbourhoodGroup")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("neighbourhood_group");

                    b.ToTable("neighbourhoods", (string)null);
                });

            modelBuilder.Entity("InsideAirbnb.Models.Review", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("ListingId")
                        .HasColumnType("int")
                        .HasColumnName("listing_id");

                    b.ToTable("reviews", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
